#!/bin/bash
# This script makes sure that windows in `bspwm` will be arranged in a
# master-stack layout:
#   ┌───┬─┐
#   │   ├─┤
#   │   ├─┤
#   └───┴─┘
# Ensure that:
#   bspc config initial_polarity second_child
#   bspc config automatic_scheme alternate
#
# Inspiration: 
#   -   https://github.com/phenax/bsp-layout/
#   -   https://www.reddit.com/r/bspwm/comments/euq5r7/ 


# Find out if the orientation of node n is as given
function turned {
    bspc query -T --node "$2" | jq -e --arg o "$1" '.splitType==$o'
    return $?
}

# Turn a node vertical or horizontal
function turn {
    if ! turned "$1" "$2"; then
        bspc node "$1" --rotate 90
    fi
}

# ACTIONS ####################################################################

# Show an overview of the current tree
function action:tree {
    bspc query --tree --node '@/' | \
        jq 'def f: if .==null then null else {"id":.id|hex,"split":.splitType,"1":.firstChild|f,"2":.secondChild|f ,"client":.client?.className} end; . | f'
}

# Remove all unoccupied desktops
function action:clean_desktops {
    for d in $(bspc query --desktops --desktop '.!occupied'); do
        bspc desktop "$d" --remove
    done
}

# Automatically name workspaces to include icons for whatever programs are
# running inside.
function action:something {
    : # TODO
}

# EVENTS #####################################################################

function event:node_add {
    local monitor_id=$1
    local desktop_id=$2
    local ip_id=$3 # insertion point
    local node_id=$4 # node to insert
    echo Added $node_id

    if bspc query --nodes --node '@/2/2' > /dev/null; then
        bspc node "@/2/2" --presel-dir south --insert-receptacle
        bspc node "$node_id" --to-node 'any.!window.leaf'
        bspc node "@/2" --balance
    fi
}

function event:node_remove {
    local monitor_id=$1
    local desktop_id=$2
    local node_id=$3
    echo Removed $node_id
}

function event:node_swap {
    local src_monitor_id=$1
    local scc_desktop_id=$2
    local src_node_id=$3
    local dst_monitor_id=$4
    local dst_desktop_id=$5
    local dst_node_id=$6
    echo Swapped $src_node_id with $dst_node_id
}

# MAIN #######################################################################
# If no action is given, listen to events. Otherwise, execute actions.

if [ -z "${@}" ]; then
    bspc subscribe node_{add,remove} | while read ev; do
        event:$ev
    done
else
    action:${@}
fi
