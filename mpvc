#!/bin/sh
# The only thing I ever do with my music player is listen to albums, preferably
# from start to finish. I was frustrated with most music player interfaces as
# they were sluggish and hard to subject to my will. This script simply
# presents the user with a shuffled list of albums to play, then gets out of
# the way.
#
# Note that you can use the excellent <github.com/hoyon/mpv-mpris> to add MPRIS
# support to `mpv`, so that it can be controlled and followed via `dbus`, using
# such programs as `playerctl`. However, this script controls it purely via
# standard UNIX tools and `mpv`'s own IPC mechanism.
# See <https://mpv.io/manual/stable/#json-ipc>.
#
# Dependencies:
#   (Debian) apt install mpv jq netcat-netbsd fzf xdg-dirs fd-find shuf sort

# TODO: Show play/pause as first option if something is already in mpv's
# playlist
# TODO: Preview is just this program again, but shows list with currently
# playing
# TODO: Monitor

FD="$(which fdfind || which fd)"
MUSIC="$(xdg-user-dir MUSIC)"
SOCK="/tmp/mpvsocket"
PLAYLIST="/tmp/mpvplaylist"

# Test if an instance of mpv is already listening; if not, start one
if ! test -S "$SOCK" || ! nc -Uz "$SOCK" 2>/dev/null; then
    mpv --idle --no-terminal --no-audio-display --input-ipc-server="$SOCK" &
fi

case $1 in
    pause)
        echo '{"command": ["cycle", "pause"]}' | nc -UN "$SOCK" ;;
    prev*)
        echo '{"command": ["playlist-prev"]}' | nc -UN "$SOCK" ;;
    next)
        echo '{"command": ["playlist-next"]}' | nc -UN "$SOCK" ;;
    monitor)
        echo '{"command": ["observe_property", 1, "metadata"]}' \
        | nc -U "$SOCK" \
        | jq
        ;;
    list)
        echo '{"command": ["get_property", "playlist"]}' | nc -UN "$SOCK" \
        | jq --arg MUSIC $MUSIC/ -r '.data[] | (
            if .playing then "▶ " elif .current then "⏸ " else "  " end
            + (.filename | ltrimstr($MUSIC) | rtrimstr(".mp3")))' ;;
    pick)
        # Query for album to play, and make corresponding playlist
        $FD . --base-directory "$MUSIC" --type d --min-depth 2 \
        | shuf \
        | fzf --exact --preview "ls \"$MUSIC\"/{}" \
        | xargs -I{} $FD '.(mp3|webm|m4a|flac|ogg|wav)$' "$MUSIC/{}" \
        | sort > "$PLAYLIST"

        # Play it
        [ -s "$PLAYLIST" ] && echo '
            {"command":["loadlist","'$PLAYLIST'","replace"]}
            {"command":["set","pause","no"]}' | nc -UN "$SOCK"
        ;;
    *)
        echo "Usage: $(basename $0) <pick|pause|prev|next|monitor|list>" >&2
        exit 1
        ;;
esac
