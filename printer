#!/bin/bash
# This quick script provides a way to print paper-efficient, double-sided
# booklets from PDFs on my cheap printer.
# Dependencies: 
#   lp, pandoc, pdfjam, pdfcrop, pdftk, mupdf, github.com/slakkenhuis/snel
set -euo pipefail
IFS=$'\n\t'
LP_ARGS=(\
    -o "TonerSaveMode=OFF" \
    -o "Resolution=600dpi" \
    -o "PageSize=A4" \
    -o "media=a4" \
    -o "fit-to-page" \
)

PANDOC_ARGS=(\
    --pdf-engine=weasyprint \
    --css "/usr/local/share/snel/style.css" \
    --template "/usr/local/share/snel/pandoc/page.html" \
    --shift-heading-level-by=1 \
)

# Exit if given printer is unknown. Check `lpstat -e` for available printers
(lpoptions -d ${PRINTER:-undefined} 2>&1 > /dev/null) || \
    (echo "Printer \"${PRINTER:-undefined}\" is unknown." 1>&2; exit 1)


# Make a temporary directory for this run, and make sure it gets deleted
TMP=$(mktemp -d "${TMPDIR:-/tmp/}$(basename $0).XXXXX")
function finalize {
    rm -rf "${TMP}"
}
trap finalize EXIT


# Start processing
INPUT="$1"
OUTPUT="$INPUT"

EXT="$(echo "${1##*.}" | tr '[:upper:]' '[:lower:]')"

if [ "${EXT}" == "pdf" ]; then

    # PDFs are cropped before use, since they tend to be intended for A4 paper

    # This crops the whitespace away
    echo "Cropping whitespace..." 1>&2
    INPUT="${OUTPUT}"
    OUTPUT="$(mktemp -p "${TMP}" "XXX.pdf")"
    pdfcrop \
        --hires \
        --noclip \
        --margins '17' \
        "${INPUT}" "${OUTPUT}"


    # This scales it back to A4 size
    echo "Scaling back to A4 size..." 1>&2 
    INPUT="${OUTPUT}"
    OUTPUT="$(mktemp -p "${TMP}" "XXX.pdf")"
    pdfjam \
        --paper 'a4paper' \
        --fitpaper 'true' \
        --outfile "${OUTPUT}" \
        -- "${INPUT}" -
else
    # Non-PDFs are converted to PDF using Pandoc

    OUTPUT=$(mktemp -p "${TMP}" "XXX.pdf")
    pandoc "${PANDOC_ARGS[@]}" -i "${INPUT}" -o "${OUTPUT}"
fi

# Puts it in booklet form
echo "Making booklet..." 1>&2
INPUT="${OUTPUT}"
OUTPUT="$(mktemp -p "${TMP}" "XXX.pdf")"
pdfjam \
    --booklet 'true' \
    --signature '4' \
    --landscape \
    --delta '2.2cm 0cm' \
    --outfile "${OUTPUT}" \
    -- "${INPUT}" -

echo "Showing preview..." 1>&2
mupdf "${OUTPUT}"
if read -p "Continue?"; then

    # Print odd pages
    ODD="$(mktemp -p "${TMP}" "XXX.odd.pdf")"
    pdftk "${OUTPUT}" cat odd output "${ODD}"
    lp -d "$PRINTER" "${LP_ARGS[@]}" "${ODD}"

    read -p "Wait for printing to finish, flip and reinsert the pages, then press enter to continue."

    # Print even pages
    EVEN="$(mktemp -p "${TMP}" "XXX.even.pdf")"
    pdftk "${OUTPUT}" cat even output "${EVEN}"
    lp -d "$PRINTER" "${LP_ARGS[@]}" -o outputorder=reverse "${EVEN}"

fi
