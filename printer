#!/bin/bash
# This quick script provides a way to print paper-efficient, double-sided
# booklets from PDFs on my cheap printer.
set -euo pipefail
IFS=$'\n\t'
LP_ARGS=(-o "TonerSaveMode=OFF" -o "Resolution=600dpi")

# Exit if given printer is unknown. Check `lpstat -e` for available printers
(lpoptions -d ${PRINTER:-undefined} 2>&1 > /dev/null) || \
    (echo "Printer \"${PRINTER:-undefined}\" is unknown." 1>&2; exit 1)


# Make a temporary directory for this run, and make sure it gets deleted
TMP=$(mktemp -d "${TMPDIR:-/tmp/}$(basename $0).XXXXX")
function finalize {
    rm -rf "${TMP}"
}
trap finalize EXIT


# Start processing
INPUT="$1"
EXT="$(echo "${1##*.}" | tr '[:upper:]' '[:lower:]')"


# Preliminary conversion to PDF, if needed
echo "Make sure we are dealing with a PDF file..." 1>&2
case "${EXT}" in
    md|markdown|html|epub)
        OUTPUT=$(mktemp -p "${TMP}" "XXX.pdf")
        pandoc --pdf-engine=weasyprint -i "${INPUT}" -o "${OUTPUT}"
        ;;
    pdf)
        OUTPUT="${INPUT}"
        ;;
    *)
        echo "Unknown file format ${EXT}" 1>&2; exit 1
        ;;
esac


# This crops the whitespace away
echo "Cropping whitespace..." 1>&2
INPUT="${OUTPUT}"
OUTPUT="$(mktemp -p "${TMP}" "XXX.pdf")"
pdfcrop \
    --hires \
    --noclip \
    --margins 17 \
    "${INPUT}" "${OUTPUT}"


# This scales it back to A4 size. Very slow.
echo "Scaling back to A4 size..." 1>&2 
INPUT="${OUTPUT}"
OUTPUT="$(mktemp -p "${TMP}" "XXX.pdf")"
gs -q -dNOPAUSE \
    -dBATCH \
    -sDEVICE=pdfwrite \
    -dSAFER \
    -dCompatibilityLevel=1.3 \
    -dPDFSETTINGS=/printer
    -dFIXEDMEDIA \
    -dPDFFitPage \
    -sPAPERSIZE=a4 \
    -sOutputFile="${OUTPUT}" \
    -f "${INPUT}"


# Puts it in booklet form
echo "Making booklet..." 1>&2
INPUT="${OUTPUT}"
OUTPUT="$(mktemp -p "${TMP}" "XXX.pdf")"
pdfjam \
    --booklet 'true' \
    --signature '4' \
    --landscape  \
    --delta '2.2cm 0cm' \
    --outfile "${OUTPUT}" \
    -- "${INPUT}" -

# Print odd pages
ODD="$(mktemp -p "${TMP}" "XXX.odd.pdf")"
pdftk "${OUTPUT}" cat odd output "${ODD}"
lp -d "$PRINTER" "${LP_ARGS[@]}" "${ODD}"

read -p "Wait for printing to finish, flip and reinsert the pages, then press enter to continue."

# Print even pages
EVEN="$(mktemp -p "${TMP}" "XXX.even.pdf")"
pdftk "${OUTPUT}" cat even output "${EVEN}"
lp -d "$PRINTER" "${LP_ARGS[@]}" -o outputorder=reverse "${EVEN}"
