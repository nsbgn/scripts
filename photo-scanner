#!/bin/bash
# `photo-scanner` - I use this to scan and then automatically separate, crop
# and derotate analog pictures. `fmwconcepts.com/imagemagick/multicrop` was an
# inspiration, but this is written from scratch since multicrop is non-free.
#
# Usage examples:
#   photo-scanner OUTPUT_TITLE
#   INPUT=already-scanned-picture.jpg photo-scanner

set -euo pipefail
IFS=$'\n\t'

# Make a temporary directory for this run, and make sure it will get deleted
TMP=$(mktemp -d "${TMPDIR:-/tmp/}$(basename $0).XXXXX")
function finalize {
    rm -rf "${TMP}"
}
trap finalize EXIT

TITLE="${1:-photo}" # What will be the prefix to the output file?
DPI=300 # DPI resolution
FUZZ=10 # Extent to which we tolerate colors that don't exactly match
GRID=8 # How many grid lines are we testing in either dimension?
LMASK="${TMP}/local-mask.mpc"
GMASK="${TMP}/global-mask.mpc"

# Scan an image, but only if the ${INPUT} variable is empty
if [ -z "${INPUT:-}" ] ; then
    INPUT="${TMP}/scan.pnm"
    echo "Starting up scanner..." >&2
    scanimage \
        --progress \
        --resolution ${DPI} \
        -l 2 -t 2 -x 215 -y 297 \
        --format pnm > ${INPUT} \
    && (echo "Scan finished. Now cropping and de-rotating..." >&2) \
    || (echo "Scan failed. Exiting..." >&2 ; exit 1)
fi

# Make a mask such that the background of the scan is transparent and
# everything else is plain red
convert ${INPUT} -fuzz ${FUZZ}% \
    -fill none -draw "matte 0,0 floodfill" \
    -fill red +opaque none \
    ${GMASK}

# If there are already pictures called `${TITLE}-${NUMBER}.jpg` in the current
# directory, we will make sure that our number is one higher
NUMBER=$((1 + $( echo ${TITLE}-0.jpg ${TITLE}-*.jpg \
    | tr ' ' '\n' | sed -n "s|${TITLE}-\([0-9]\+\).jpg|\1|p" \
    | sort -g | tail -n 1) ))

# Now we try to find each individual photo by looping over a grid
IFS=' ' read -r WIDTH HEIGHT Xd Yd <<< $( convert ${GMASK} -format "%w %h %[fx:trunc(w/${GRID})] %[fx:trunc(h/${GRID})]" info: )
for((X=${Xd};X<${WIDTH};X=${X}+${Xd})); do for((Y=${Yd};Y<${HEIGHT};Y=${Y}+${Yd})); do

    # If the color at this position is not transparent, we found a picture!
    if [ $(convert ${GMASK} -format "%[fx:u.p{${X},${Y}}==none]" info:) -eq 0 ]; then
        OUTPUT="${TITLE}-${NUMBER}.jpg"

        if [ -f "$OUTPUT" ]; then
            echo "File \"${OUTPUT}\" already exists!" >&2
            exit 1
        fi
       
        # Create local mask by keeping only the current region opaque
        convert ${GMASK} -fuzz ${FUZZ}% \
            -fill white -draw "color ${X},${Y} floodfill" \
            +transparent white \
            ${LMASK}

        # Compose the local mask with the scan, then trim and de-rotate
        echo "Writing ${OUTPUT}..." >&2
        convert ${INPUT} -alpha on \
            ${LMASK} -compose Dst_In -composite \
            -background white -alpha remove \
            -trim -deskew 40% -trim +repage \
            ${OUTPUT}

        # Remove current region from the global mask so that it won't be found again
        convert ${GMASK} -fuzz ${FUZZ}% \
            -fill none -draw "matte ${X},${Y} floodfill" ${GMASK}

        NUMBER=$((${NUMBER}+1))
    fi
done
done
