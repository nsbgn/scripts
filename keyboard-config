#!/bin/bash
#
# I have found that the usability of a keyboard increases immensely with the
# following settings: 
#
# 1. Keeping CapsLock pressed turns it into a Super modifier. I use this key 
#    to control my window manager.
# 2. Tapping CapsLock triggers Escape. This is useful for vim-style
#    keybindings.
# 3. Right Alt is set to the Compose key. This way, you would type special
#    characters by typing intuitive keys in succession (e.g. RAlt+'+e → é). See
#    the [compose table](https://help.ubuntu.com/community/GtkComposeTable).
# 4. Shift + Right Alt is set to the Greek key (e.g. Shift+RAlt+f → φ).
# 5. Keeping Tab pressed makes it act like a mode switch, which allows me use
#    specific keys (like the cursor keys) without putting my hands in awkward
#    positions. I view it as a compatibility key of sorts, for applications 
#    that don't have vim-like keys. Additionally, if this Tab is pressed in 
#    conjunction with Shift, a part of the keyboard turns into a number pad, 
#    which is useful when you don't have a physical number pad. Again, simply
#    tapping Tab will maintain the original effect. 
# 6. The 'keynav' program is used for keyboard-driven mouse navigation, in case
#    we *really* need that pointer.
#
# The first three are easy to achieve with `setxkbmap -option compose:ralt 
# -option caps:super` and `xcape -e Super_L=Escape`. For 4 and 5, we will 
# make a custom keymap. I would like to find a better way, as switching 
# keyboard layouts messes it up.
#
# Thanks for inspiration to:
# - https://www.charvolant.org/doug/xkb/
# - https://github.com/alols/xcape
# - https://github.com/altercation/dotfiles-tilingwm
# - https://www.semicomplete.com/projects/keynav/
# - https://www.x.org/releases/X11R7.7/doc/xorg-docs/input/XKB-Enhancing.html
# - https://ultimatehackingkeyboard.com/blog/2015/09/09/ansi-or-iso-which-keyboard-layout-is-more-ergonomic

#export DISPLAY=:0
XKBDIR=/tmp/xkb
[ -d ${XKBDIR} ] || mkdir -p ${XKBDIR}/{keymap,symbols,types}

# Generate a basic keymap.
setxkbmap -option -option caps:super -print \
    | sed 's/\(\s*xkb_symbols\s*{\s*include\s*".*\)\("\s*};\s*\)/\1+custom(tab)+custom(special)\2/g' \
    > ${XKBDIR}/keymap/custom.xkb

# Add customisations to its `xkb_symbols`. We assign Tab to some weird key so
# that `xcape` won't get confused. We use the ISO_Level3_Shift key for mode
# switching, because we can then just add our special keys as level 3 syms.
cat > ${XKBDIR}/symbols/custom << EOF
default partial modifier_keys
xkb_symbols "tab" {
    key  <TAB> { [ ISO_Level3_Shift, Mode_switch ] };
    key <I252> { [ Tab, ISO_Left_Tab ] }; 
};

partial
xkb_symbols "special" {
    key <AC03> { [ d, D, Delete ]};

    key <AE07> { [ 7, ampersand, 7, 7 ] };
    key <AE08> { [ 8, asterisk, 8, 8 ] };
    key <AE09> { [ 9, parenleft, 9, 9 ] };
    key <AE10> { [ 0, parenright, 0, asterisk ] };
    key <AD07> { [ u, U, u, 4 ] };
    key <AD08> { [ i, I, i, 5 ] };
    key <AD09> { [ o, O, o, 6 ] };
    key <AB07> { [ m, M, m, 0 ] };
    key <AD10> { [ p, P, p, minus ] };
    key <AB08> { [ comma, less, Home, period  ] };
    key <AB09> { [ period, greater, End, comma ] };
    key <AB10> { [ slash, question, backslash ] };

    key <AC06> { [ h, H, Left ]};
    key <AC07> { [ j, J, Down, 1 ]};
    key <AC08> { [ k, K, Up, 2 ]};
    key <AC09> { [ l, L, Right, 3 ]};
    key <AC10> { [ semicolon, colon, asciitilde, plus ]};
    key <AC11> { [ apostrophe, quotedbl, grave ] };

    key <RALT> { [ Multi_key, dead_greek ] };
};
EOF

# Compile the new xkbmap
xkbcomp -synch -w3 -I${XKBDIR} ${XKBDIR}/keymap/custom.xkb ${DISPLAY}

# (Re)start xcape, to make sure we can still use the original keys by tapping
# the respective modifiers.
killall -q -e xcape
xcape -e 'Super_L=Escape;ISO_Level3_Shift=Tab' -t 150ms

killall -q -e keynav
keynav &
